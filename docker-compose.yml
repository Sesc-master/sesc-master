version: '3.8'
services:
  backend:
    depends_on:
      - redis
    build:
      context: .
      dockerfile: ./api-server/Dockerfile
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      PORT: ${API_SERVER_PORT}
      SESC_REQUEST_LOCK_DELAY: ${SESC_REQUEST_LOCK_DELAY}
      SCHEDULES_MAX_PARALLEL_REQUESTS: ${SESC_REQUEST_LOCK_DELAY}
      GRAPHQL_LANDING_PAGE: ${GRAPHQL_LANDING_PAGE}
      SCHEDULING_TZ: ${SCHEDULING_TZ}
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
    restart: always
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - ${FRONTEND_SERVICE_PORT}:${FRONTEND_SERVICE_PORT}
    restart: always
  redis:
    build: ./redis/
    restart: unless-stopped
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - 'API_PORT=6379'
      - 'NODE_ENV=production'
  worker:
    depends_on:
      - redis
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      SESC_REQUEST_LOCK_DELAY: ${SESC_REQUEST_LOCK_DELAY}
      SCHEDULES_MAX_PARALLEL_REQUESTS: ${SESC_REQUEST_LOCK_DELAY}
      GRAPHQL_LANDING_PAGE: ${GRAPHQL_LANDING_PAGE}
      SCHEDULING_TZ: ${SCHEDULING_TZ}
    restart: always
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        NGINX_PORT: ${NGINX_SERVICE_PORT}
        FRONTEND_PORT: ${FRONTEND_SERVICE_PORT}
        BACKEND_PORT: ${API_SERVER_PORT}
    ports:
      - ${NGINX_SERVICE_PORT}:${NGINX_SERVICE_PORT}
    restart: always

volumes:
  redis:
    driver: local